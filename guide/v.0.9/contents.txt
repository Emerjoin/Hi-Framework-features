
0. What is this?

    a) Why we built it
    b) Why you should someone use it




ANGULAR JS 1.5 - Meet Angular (for people that nerver heard about it)
TODO: Basic angular tutorial



TUTORIALS TOOLS

a) Glassfish5
b) JDK 1.8
c) XXXXX


THE TUTORIAL

1. How it works
   1.1 Architecture (YayeeServlet, YayeeWebsocket, CDI, Controllers, EJB, Frontiers, Angular)
   1.2.AngularJS
   1.3.Frontiers
   1.4.CDI

2. Hands on

2.1. How to set it up?
       a) Add Dependencies
       b) Basic XML configuration
       c) MVC Configuration
       d) Automatic angular module and controller creation

2.2. Creating the first app
        b) Creating the first controller
        c) Creating the views folder
        d) Creating the view
        d) Creating the view controller
        e) Creating the assets folder
        f) Adding jquery to the assets folder
        g) Creating the first template
        h) Adding the template to the XML configuration
        i) Defining the welcome URL
        f) Setting up the controllers package and the views folder

2.3. Adding some server-side processing
        a) Creating the first Frontier (sum of two numbers)
        b) Summing two numbers
        c) Setting up the frontiers package
        d) Invoking the frontier on javascript


2.4. The template scope
        a) Yapiys.$root

2.5. Integrating JAVA EE Login
        a) Creating a file realm
        b) The UserDetailsProvider
        c) Displaying user data on the template

2.6. Notifications
        a) Sending notifications within the web layer
        b) Sending notifications within the business layer
        c)


x. Template events (connected/disconnected, onViewClose, others)

x. Advanced topics
x.1 Routing
    a) The Yayee servlet

x.2 Assets
    a) The reserved keyword (webroot)
    b) What are the steps till a file gets read
    b) How to enable caching for the files

x.3 Server-side Controllers
    a) The Controllers base class
    b) Lifecycle of a controller : the process behind an action invocation
    c) Recommended CDI scope for controllers

x.4 HTML Views
    a)

x.5 View controllers

x.6. Template controllers


x.7 Frontiers
    a) The Javascript generation process
    b) The lifecycle
    b) Recommended CDI scope
    c) Invocation policies
    d) Cleaning invocations when moving to another route
    e) Monitoring the frontier action's execution duration
    f) Renaming a frontier
    g) Role based access control
    i) Data validation
    j) Using Annotations Processing

x.8 Angular JS
    b) Architecture in a AngularJS perspective
    a) Adding external angular modules

x.9 GSON
    a) Adding custom serializer
    c) Adding custom JSON representation generators on the frontiers client-side


x.x.Security - How is your application safe?

